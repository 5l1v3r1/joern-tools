from joerntools.shelltool.LookupTool import LookupTool
from py2neo import neo4j

DESCRIPTION = """ """

DEFAULT_TAGNAME = 'tag'
BATCH_SIZE = 1000

class JoernTag(LookupTool):
    
    def __init__(self):
        LookupTool.__init__(self, DESCRIPTION)
        self.inputPairs = []

    def processLine(self, line):
         
       
         # [nodeId, tagValue]
         X = line.split('\t')
         X = [int(X[0]), X[1]]
         
         self.inputPairs.append(X)
         
         if len(self.inputPairs) == BATCH_SIZE:
            self.processBatch(self.inputPairs)
            self.inputPairs = []

    # @Override
    def processBatch(self, pairs):
        
        batch = neo4j.WriteBatch(self.dbInterface.j.graphDb)
        
        for (nodeId, tagVal) in pairs:
            # FIXME: Need to use the database URL here
            batch.set_property(neo4j.Node('http://localhost:7474/db/data/node/' + str(nodeId)), DEFAULT_TAGNAME, tagVal)
        
        batch.submit()
        
    def streamEnd(self):

        if len(self.inputPairs) != 0:
            self.processBatch(self.inputPairs)
        
    
if __name__ == '__main__':
    tool = JoernTag()
    tool.run()